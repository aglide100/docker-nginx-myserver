version: "3"

services:
    nginx:
        container_name: nginx
        build:
            context: .
        restart: always
        hostname: nginx
        networks:
            - docker_network
        ports:
            - "80:80"
            - "443:443"
        # volumes:
        #     - /etc/letsencrypt:/etc/letsencrypt
        #     - /home/data/www/certbot:/var/www/certbot
        # env_file:
        #     - /media/test/config/proxyList.env
        environment:
            # Create htpasswd user
            #- SSL=false
            - USERNAME=Hello
            - USERPWD=Hello
            - USERNAME2=Hello
            - USERPWD2=Hello
            - Domain2=localhost
            #- Domain1=${Domain1}
            # - Jdownloader2=true
            - Netdata=false
            #- Photoprism=false
            - Transmission=true
            #- Codeserver=false
            #- Jellyfin=false
            #- Jenkins=false
            #- Nextcloud=false
            #- Tomcat=false
            #- CasaOS=false
            #- Minecraft=false
            #- Dynmap=false
            #- Bluemap=false
    transmission:
        container_name: transmission
        image: linuxserver/transmission
        restart: unless-stopped
        # volumes:
        #- /etc/localtime:/etc/localtime:ro
        # - /media/pi/OS1/container-config/transmission/config:/config
        # - /media/pi/OS1/file/transmission/download:/downloads
        # - /media/pi/OS1/file/transmission/watch:/watch
        hostname: transmission
        networks:
            - docker_network
        expose:
            - 9091
            - 51413
            - 51413/udp
        privileged: true

networks:
    docker_network:
        driver: bridge
        driver_opts:
            com.docker.network.enable_ipv6: "true"
        ipam:
            driver: default
